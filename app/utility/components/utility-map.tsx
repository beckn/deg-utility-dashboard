"use client";

import { MapContainer, TileLayer, Marker, Popup } from "react-leaflet";
import { Icon } from "leaflet";
import "leaflet/dist/leaflet.css";
import type { AssetMarker, SimplifiedMeter, AssetType } from "../lib/types"; // Changed FeederData to AssetMarker, added AssetType
import { StatusBadge } from "./status-badge";
import { Button } from "@/components/ui/button";

interface UtilityMapProps {
  assets: AssetMarker[]; // Changed feeders to assets
  onSelectMeter?: (meter: SimplifiedMeter) => void;
  pingMarkers?: {
    lat: number;
    lng: number;
    type: string;
    status?: string;
    name?: string;
    load?: number;
    warningLight?: boolean; // Make this optional
  }[];
  zoom?: number; // Add zoom prop
}

export function UtilityMap({
  assets,
  onSelectMeter,
  pingMarkers,
  zoom = 12, // Default zoom level
}: UtilityMapProps) {
  // Changed feeders to assets
  const createAssetIcon = (
    type: AssetType,
    status: "Critical" | "Warning" | "Normal" = "Normal"
  ) => {
    let iconColor = "#10b981"; // Default green (Normal)
    let symbol = "‚ùì";

    if (status === "Critical") iconColor = "#ef4444"; // Red
    else if (status === "Warning") iconColor = "#f59e0b"; // Yellow

    switch (type) {
      case "substation":
        symbol = "/feeders.svg"; // Lightning for substation
        break;
      case "transformer":
        symbol = "T"; // T for transformer
        iconColor =
          status === "Critical"
            ? "#ef4444"
            : status === "Warning"
            ? "#f59e0b"
            : "#3b82f6"; // Blue for normal transformer
        break;
      case "household":
        symbol = "üè†"; // House for household
        iconColor =
          status === "Critical"
            ? "#ef4444"
            : status === "Warning"
            ? "#f59e0b"
            : "#10b981"; // Green for normal household
        break;
      default:
        symbol = "üìç"; // Default pin
        break;
    }

    const svgString = `<svg width="40" height="50" viewBox="0 0 40 50" xmlns="http://www.w3.org/2000/svg"><defs><filter id="shadow" x="-50%" y="-50%" width="200%" height="200%"><feDropShadow dx="0" dy="2" stdDeviation="3" floodColor="rgba(0,0,0,0.2)"/></filter></defs><g filter="url(#shadow)"><path d="M20 5 C12 5 5 12 5 20 C5 24 10 30 20 40 C30 30 35 24 35 20 C35 12 28 5 20 5" fill="${iconColor}" stroke="white" strokeWidth="3"/><text x="20" y="24" textAnchor="middle" fill="white" fontFamily="Arial, sans-serif" fontSize="16" fontWeight="bold">${symbol}</text></g></svg>`;

    return new Icon({
      iconUrl: `data:image/svg+xml,${encodeURIComponent(svgString)}`,
      iconSize: [40, 50],
      iconAnchor: [20, 50],
      popupAnchor: [0, -50],
    });
  };

  // Helper to create a ping icon for ping markers by type, styled like asset markers
  const getStatusColor = (status: string) => {
    if (status === "Critical") return "#ef4444"; // Red
    if (status === "Warning") return "#f59e0b"; // Yellow
    return "#10b981"; // Green
  };

  const createPingIcon = (
    type: string,
    status: string = "Normal",
    warningLight = false // default to false
  ) => {
    if (type === "Feeders") {
      const bgColor = getStatusColor(status);
      const shouldShowWarningLight = status === "Critical";
      const svgString =
        warningLight && shouldShowWarningLight
          ? `
       <svg width="36" height="46" viewBox="0 0 36 46" fill="none" xmlns="http://www.w3.org/2000/svg">
<mask id="path-1-outside-1_918_5837" maskUnits="userSpaceOnUse" x="0" y="0" width="36" height="46" fill="black">
<rect fill="white" width="36" height="46"/>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z"/>
</mask>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z" fill="#DB4437"/>
<path d="M17.667 1V0H17.667L17.667 1ZM34.334 17.7412L35.334 17.7412V17.7412H34.334ZM27.5869 31.1953L26.9894 30.3934L26.9842 30.3974L27.5869 31.1953ZM18.9512 43.3936L19.9373 43.5596L19.9373 43.5595L18.9512 43.3936ZM17.7861 44.5166L17.8353 45.5154L17.8583 45.5143L17.8812 45.5121L17.7861 44.5166ZM17.667 44.5225V45.5225H17.6916L17.7161 45.5213L17.667 44.5225ZM16.3828 43.3936L15.3967 43.5595L15.3967 43.5596L16.3828 43.3936ZM7.74609 31.1953L8.34881 30.3973L8.34364 30.3935L7.74609 31.1953ZM1 17.7412H0V17.7412L1 17.7412ZM17.667 1V2C26.3156 2 33.334 9.04316 33.334 17.7412H34.334H35.334C35.334 7.94697 27.4285 0 17.667 0V1ZM34.334 17.7412L33.334 17.7412C33.334 22.9263 30.84 27.5242 26.9894 30.3934L27.5869 31.1953L28.1844 31.9972C32.5215 28.7655 35.334 23.5827 35.334 17.7412L34.334 17.7412ZM27.5869 31.1953L26.9842 30.3974C23.8312 32.7789 19.0564 36.7409 17.965 43.2276L18.9512 43.3936L19.9373 43.5595C20.8884 37.9065 25.0607 34.3566 28.1896 31.9933L27.5869 31.1953ZM18.9512 43.3936L17.9651 43.2275C17.9337 43.4137 17.7952 43.5112 17.691 43.5211L17.7861 44.5166L17.8812 45.5121C18.9576 45.4092 19.7679 44.5656 19.9373 43.5596L18.9512 43.3936ZM17.7861 44.5166L17.737 43.5178L17.6179 43.5237L17.667 44.5225L17.7161 45.5213L17.8353 45.5154L17.7861 44.5166ZM17.667 44.5225V43.5225C17.5567 43.5225 17.4028 43.4288 17.3689 43.2275L16.3828 43.3936L15.3967 43.5596C15.5769 44.6297 16.4879 45.5225 17.667 45.5225V44.5225ZM16.3828 43.3936L17.369 43.2276C16.2775 36.7404 11.5017 32.7787 8.3488 30.3973L7.74609 31.1953L7.14339 31.9933C10.2725 34.3567 14.4455 37.9061 15.3967 43.5595L16.3828 43.3936ZM7.74609 31.1953L8.34364 30.3935C4.49347 27.5243 2.00001 22.9261 2 17.7412L1 17.7412L0 17.7412C9.59635e-06 23.5823 2.81188 28.7654 7.14855 31.9972L7.74609 31.1953ZM1 17.7412H2C2 9.04318 9.01843 2.00003 17.667 2L17.667 1L17.667 0C7.9055 3.38554e-05 0 7.94698 0 17.7412H1Z" fill="url(#paint0_linear_918_5837)" mask="url(#path-1-outside-1_918_5837)"/>
<path d="M27.8111 22.5206L19.3916 5.88463C18.7949 4.70512 17.2051 4.70512 16.6079 5.88463L8.18892 22.5206C8.05935 22.7767 7.99439 23.0641 8.00038 23.3549C8.00637 23.6456 8.08311 23.9297 8.2231 24.1795C8.3631 24.4293 8.56156 24.6362 8.79913 24.78C9.0367 24.9238 9.30526 24.9996 9.57858 25H26.419C26.6925 25 26.9613 24.9246 27.1993 24.7809C27.4372 24.6373 27.636 24.4305 27.7763 24.1806C27.9166 23.9308 27.9935 23.6465 27.9996 23.3555C28.0057 23.0646 27.9408 22.7769 27.8111 22.5206ZM18 22.4244C17.8046 22.4244 17.6136 22.3628 17.4511 22.2473C17.2886 22.1318 17.162 21.9676 17.0872 21.7755C17.0124 21.5834 16.9928 21.372 17.031 21.1681C17.0691 20.9642 17.1632 20.7769 17.3014 20.6298C17.4395 20.4828 17.6156 20.3827 17.8072 20.3421C17.9989 20.3016 18.1976 20.3224 18.3781 20.402C18.5586 20.4815 18.7129 20.6163 18.8215 20.7892C18.9301 20.962 18.988 21.1653 18.988 21.3732C18.988 21.5112 18.9625 21.6479 18.9128 21.7755C18.8632 21.903 18.7904 22.0189 18.6986 22.1165C18.6069 22.2142 18.498 22.2916 18.3781 22.3444C18.2582 22.3973 18.1297 22.4244 18 22.4244ZM19.073 11.8515L18.7894 18.2641C18.7894 18.4872 18.7062 18.7011 18.5579 18.8588C18.4097 19.0165 18.2086 19.1051 17.999 19.1051C17.7894 19.1051 17.5883 19.0165 17.4401 18.8588C17.2919 18.7011 17.2086 18.4872 17.2086 18.2641L16.925 11.8541C16.9187 11.701 16.9413 11.548 16.9917 11.4043C17.0421 11.2607 17.1191 11.1293 17.2182 11.018C17.3174 10.9067 17.4365 10.8178 17.5686 10.7565C17.7007 10.6953 17.8431 10.663 17.9872 10.6615H17.9975C18.1426 10.6614 18.2862 10.6926 18.4196 10.7532C18.5531 10.8138 18.6736 10.9025 18.7739 11.014C18.8742 11.1255 18.9523 11.2575 19.0033 11.402C19.0544 11.5465 19.0774 11.7005 19.071 11.8547L19.073 11.8515Z" fill="#FFE121"/>
<defs>
<linearGradient id="paint0_linear_918_5837" x1="17.667" y1="1" x2="17.667" y2="44.5225" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0.35"/>
</linearGradient>
</defs>
</svg>
      `
          : `
              <svg width="36" height="46" viewBox="0 0 36 46" fill="none" xmlns="http://www.w3.org/2000/svg">
<mask id="path-1-outside-1_981_115" maskUnits="userSpaceOnUse" x="0" y="0" width="36" height="46" fill="black">
<rect  fill="${bgColor}" width="36" height="46"/>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z"/>
</mask>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z" fill="${bgColor}"/>
<path d="M17.667 1V0H17.667L17.667 1ZM34.334 17.7412L35.334 17.7412V17.7412H34.334ZM27.5869 31.1953L26.9894 30.3934L26.9842 30.3974L27.5869 31.1953ZM18.9512 43.3936L19.9373 43.5596L19.9373 43.5595L18.9512 43.3936ZM17.7861 44.5166L17.8353 45.5154L17.8583 45.5143L17.8812 45.5121L17.7861 44.5166ZM17.667 44.5225V45.5225H17.6916L17.7161 45.5213L17.667 44.5225ZM16.3828 43.3936L15.3967 43.5595L15.3967 43.5596L16.3828 43.3936ZM7.74609 31.1953L8.34881 30.3973L8.34364 30.3935L7.74609 31.1953ZM1 17.7412H0V17.7412L1 17.7412ZM17.667 1V2C26.3156 2 33.334 9.04316 33.334 17.7412H34.334H35.334C35.334 7.94697 27.4285 0 17.667 0V1ZM34.334 17.7412L33.334 17.7412C33.334 22.9263 30.84 27.5242 26.9894 30.3934L27.5869 31.1953L28.1844 31.9972C32.5215 28.7655 35.334 23.5827 35.334 17.7412L34.334 17.7412ZM27.5869 31.1953L26.9842 30.3974C23.8312 32.7789 19.0564 36.7409 17.965 43.2276L18.9512 43.3936L19.9373 43.5595C20.8884 37.9065 25.0607 34.3566 28.1896 31.9933L27.5869 31.1953ZM18.9512 43.3936L17.9651 43.2275C17.9337 43.4137 17.7952 43.5112 17.691 43.5211L17.7861 44.5166L17.8812 45.5121C18.9576 45.4092 19.7679 44.5656 19.9373 43.5596L18.9512 43.3936ZM17.7861 44.5166L17.737 43.5178L17.6179 43.5237L17.667 44.5225L17.7161 45.5213L17.8353 45.5154L17.7861 44.5166ZM17.667 44.5225V43.5225C17.5567 43.5225 17.4028 43.4288 17.3689 43.2275L16.3828 43.3936L15.3967 43.5596C15.5769 44.6297 16.4879 45.5225 17.667 45.5225V44.5225ZM16.3828 43.3936L17.369 43.2276C16.2775 36.7404 11.5017 32.7787 8.3488 30.3973L7.74609 31.1953L7.14339 31.9933C10.2725 34.3567 14.4455 37.9061 15.3967 43.5595L16.3828 43.3936ZM7.74609 31.1953L8.34364 30.3935C4.49347 27.5243 2.00001 22.9261 2 17.7412L1 17.7412L0 17.7412C9.59635e-06 23.5823 2.81188 28.7654 7.14855 31.9972L7.74609 31.1953ZM1 17.7412H2C2 9.04318 9.01843 2.00003 17.667 2L17.667 1L17.667 0C7.9055 3.38554e-05 0 7.94698 0 17.7412H1Z" fill="url(#paint0_linear_981_115)" mask="url(#path-1-outside-1_981_115)"/>
<path d="M21.126 9.56641L18.7363 15.4795L18.459 16.166H22.0645L15.0078 26.7236L16.0928 20.2148L16.1904 19.6328H13.6133L15.6748 9.56641H21.126Z" fill="black" stroke="black"/>
<defs>
<linearGradient id="paint0_linear_981_115" x1="17.667" y1="1" x2="17.667" y2="44.5225" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0.35"/>
</linearGradient>
</defs>
</svg>
 

     `;
      return new Icon({
        iconUrl: `data:image/svg+xml,${encodeURIComponent(svgString)}`,
        iconSize: [40, 50],
        iconAnchor: [20, 50],
        popupAnchor: [0, -50],
      });
    }
    let color = "#64748b";
    let symbol = "‚óè";
    let iconSymbol = "‚ùì";
    let border = "#fff";
    switch (type) {
      case "Transformers": {
        const bgColor = getStatusColor(status);
        const transformerSvgString = `
        <svg width="36" height="46" viewBox="0 0 36 46" fill="none" xmlns="http://www.w3.org/2000/svg">
<mask id="path-1-outside-1_774_10596" maskUnits="userSpaceOnUse" x="0" y="0" width="36" height="46" fill="black">
<rect fill="white" width="36" height="46"/>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z"/>
</mask>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z" fill="#2463EB"/>
<path d="M17.667 1V0H17.667L17.667 1ZM34.334 17.7412L35.334 17.7412V17.7412H34.334ZM27.5869 31.1953L26.9894 30.3934L26.9842 30.3974L27.5869 31.1953ZM18.9512 43.3936L19.9373 43.5596L19.9373 43.5595L18.9512 43.3936ZM17.7861 44.5166L17.8353 45.5154L17.8583 45.5143L17.8812 45.5121L17.7861 44.5166ZM17.667 44.5225V45.5225H17.6916L17.7161 45.5213L17.667 44.5225ZM16.3828 43.3936L15.3967 43.5595L15.3967 43.5596L16.3828 43.3936ZM7.74609 31.1953L8.34881 30.3973L8.34364 30.3935L7.74609 31.1953ZM1 17.7412H0V17.7412L1 17.7412ZM17.667 1V2C26.3156 2 33.334 9.04316 33.334 17.7412H34.334H35.334C35.334 7.94697 27.4285 0 17.667 0V1ZM34.334 17.7412L33.334 17.7412C33.334 22.9263 30.84 27.5242 26.9894 30.3934L27.5869 31.1953L28.1844 31.9972C32.5215 28.7655 35.334 23.5827 35.334 17.7412L34.334 17.7412ZM27.5869 31.1953L26.9842 30.3974C23.8312 32.7789 19.0564 36.7409 17.965 43.2276L18.9512 43.3936L19.9373 43.5595C20.8884 37.9065 25.0607 34.3566 28.1896 31.9933L27.5869 31.1953ZM18.9512 43.3936L17.9651 43.2275C17.9337 43.4137 17.7952 43.5112 17.691 43.5211L17.7861 44.5166L17.8812 45.5121C18.9576 45.4092 19.7679 44.5656 19.9373 43.5596L18.9512 43.3936ZM17.7861 44.5166L17.737 43.5178L17.6179 43.5237L17.667 44.5225L17.7161 45.5213L17.8353 45.5154L17.7861 44.5166ZM17.667 44.5225V43.5225C17.5567 43.5225 17.4028 43.4288 17.3689 43.2275L16.3828 43.3936L15.3967 43.5596C15.5769 44.6297 16.4879 45.5225 17.667 45.5225V44.5225ZM16.3828 43.3936L17.369 43.2276C16.2775 36.7404 11.5017 32.7787 8.3488 30.3973L7.74609 31.1953L7.14339 31.9933C10.2725 34.3567 14.4455 37.9061 15.3967 43.5595L16.3828 43.3936ZM7.74609 31.1953L8.34364 30.3935C4.49347 27.5243 2.00001 22.9261 2 17.7412L1 17.7412L0 17.7412C9.59635e-06 23.5823 2.81188 28.7654 7.14855 31.9972L7.74609 31.1953ZM1 17.7412H2C2 9.04318 9.01843 2.00003 17.667 2L17.667 1L17.667 0C7.9055 3.38554e-05 0 7.94698 0 17.7412H1Z" fill="url(#paint0_linear_774_10596)" mask="url(#path-1-outside-1_774_10596)"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M22.1521 9.5813C21.9395 9.5813 21.9395 9.88713 22.1521 9.88713C22.3654 9.88713 22.3654 9.5813 22.1521 9.5813ZM17.5612 21.1723C17.5612 21.0425 17.6718 20.9378 17.809 20.9378C17.9462 20.9378 18.0568 21.0425 18.0568 21.1723V22.0402C18.0568 22.17 17.9462 22.2747 17.809 22.2747C17.6718 22.2747 17.5612 22.17 17.5612 22.0402V21.1723ZM20.4548 16.9988C21.3067 16.9988 21.7362 17.9788 21.1321 18.5483C20.5281 19.1199 19.4946 18.7135 19.4946 17.9074C19.4953 17.4052 19.9248 16.9988 20.4548 16.9988ZM20.7838 17.5955C20.4915 17.3189 19.9902 17.5146 19.9902 17.9068C19.9902 18.2969 20.4915 18.4926 20.7838 18.218C20.9641 18.0461 20.9641 17.7674 20.7838 17.5955ZM18.1516 16.9988C19.0034 16.9988 19.4329 17.9788 18.8289 18.5483C18.2248 19.1199 17.1913 18.7135 17.1913 17.9074C17.1921 17.4052 17.6215 16.9988 18.1516 16.9988ZM18.4805 17.5955C18.1882 17.3189 17.6869 17.5146 17.6869 17.9068C17.6869 18.2969 18.1882 18.4926 18.4805 18.218C18.6608 18.0461 18.6608 17.7674 18.4805 17.5955ZM15.8491 16.9988C16.7009 16.9988 17.1304 17.9788 16.5264 18.5483C15.9223 19.1199 14.8888 18.7135 14.8888 17.9074C14.8888 17.4052 15.3183 16.9988 15.8491 16.9988ZM16.178 17.5955C15.8857 17.3189 15.3844 17.5146 15.3844 17.9068C15.3844 18.2969 15.8857 18.4926 16.178 18.218C16.3576 18.0461 16.3576 17.7674 16.178 17.5955ZM13.5458 16.9988C14.3976 16.9988 14.8271 17.9788 14.2231 18.5483C13.6191 19.1199 12.5856 18.7135 12.5856 17.9074C12.5856 17.4052 13.0158 16.9988 13.5458 16.9988ZM13.8748 17.5955C13.5825 17.3189 13.0812 17.5146 13.0812 17.9068C13.0812 18.2969 13.5825 18.4926 13.8748 18.218C14.0551 18.0461 14.0551 17.7674 13.8748 17.5955ZM10.9661 23.2785H11.5234V16.5916H11.0357C10.8985 16.5916 10.7879 16.4869 10.7879 16.3571V15.2507C10.7879 15.1209 10.8985 15.0162 11.0357 15.0162H11.601V14.2142H11.0996C10.9624 14.2142 10.8518 14.1096 10.8518 13.9798C10.8518 13.85 10.9624 13.7453 11.0996 13.7453H11.601V13.4524H11.0996C10.9624 13.4524 10.8518 13.3477 10.8518 13.2179C10.8518 13.0881 10.9624 12.9834 11.0996 12.9834H11.601V12.6905H11.0996C10.9624 12.6905 10.8518 12.5858 10.8518 12.456C10.8518 12.3262 10.9624 12.2215 11.0996 12.2215H11.601V11.9286H11.0996C10.9624 11.9286 10.8518 11.8239 10.8518 11.6941C10.8518 11.5643 10.9624 11.4597 11.0996 11.4597H11.601V11.1667H11.0996C10.9624 11.1667 10.8518 11.0621 10.8518 10.9323C10.8518 10.8024 10.9624 10.6978 11.0996 10.6978H11.601V10.3083C11.4401 10.2458 11.3122 10.1269 11.2447 9.97532C10.8346 9.97532 10.3915 9.92979 10.0798 9.65862C9.97922 9.57095 9.97347 9.42414 10.064 9.32901C10.1566 9.23386 10.3118 9.22842 10.4123 9.31609C10.6098 9.48804 10.9639 9.51047 11.2347 9.51047C11.4516 8.97764 12.2588 8.98512 12.4657 9.52134C13.1121 9.52474 13.7858 9.44658 14.4415 9.2726C15.08 9.10405 15.7056 8.84783 16.2766 8.48899C16.3175 8.38841 16.3814 8.29869 16.4583 8.2253C16.7757 7.9249 17.2907 7.9249 17.6081 8.2253C17.7008 8.31297 17.7726 8.42307 17.8114 8.54609C18.3709 8.88319 18.9785 9.12513 19.6034 9.28417C20.2462 9.44932 20.9019 9.52407 21.5332 9.52068C21.74 8.98378 22.5452 8.97698 22.7642 9.50981C23.035 9.50777 23.3891 9.48806 23.5866 9.31543C23.6871 9.22776 23.8437 9.23456 23.9349 9.32835C24.0276 9.42349 24.0204 9.57165 23.9191 9.65796C23.6074 9.92913 23.1643 9.97466 22.7542 9.97466C22.6867 10.1249 22.5567 10.2458 22.3979 10.3077V10.6998H22.8993C23.0364 10.6998 23.1471 10.8045 23.1471 10.9343C23.1471 11.0641 23.0365 11.1688 22.8993 11.1688L22.4001 11.1674V11.4617H22.9014C23.0386 11.4617 23.1492 11.5664 23.1492 11.6962C23.1492 11.826 23.0386 11.9307 22.9014 11.9307H22.4001V12.2236H22.9014C23.0386 12.2236 23.1492 12.3282 23.1492 12.4581C23.1492 12.5879 23.0386 12.6925 22.9014 12.6925H22.4001V12.9855H22.9014C23.0386 12.9855 23.1492 13.0901 23.1492 13.2199C23.1492 13.3498 23.0386 13.4544 22.9014 13.4544H22.4001V13.7473H22.9014C23.0386 13.7473 23.1492 13.852 23.1492 13.9818C23.1492 14.1116 23.0386 14.2163 22.9014 14.2163H22.4001V15.0183H22.9653C23.1025 15.0183 23.2131 15.1229 23.2131 15.2527V16.3592C23.2131 16.489 23.1025 16.5936 22.9653 16.5936H22.4777V23.2799H23.035C23.1722 23.2799 23.2828 23.3845 23.2828 23.5143V24.7655C23.2828 24.8953 23.1722 25 23.035 25H10.966C10.8288 25 10.7182 24.8953 10.7182 24.7655V23.5143C10.7182 23.3832 10.8303 23.2785 10.9661 23.2785ZM12.019 23.2785H15.1469L15.1461 19.4964C15.1461 19.3666 15.2568 19.262 15.3939 19.262H18.6073C18.7445 19.262 18.8551 19.3666 18.8551 19.4964V23.2785H21.983L21.9823 16.5916H12.0191L12.019 23.2785ZM15.6416 23.2785H18.3608V19.7308H15.6416V23.2785ZM22.7872 23.7454H11.2138V24.5277H22.7879L22.7872 23.7454ZM12.0964 15.017H16.331V14.8464H15.8354C15.6982 14.8464 15.5876 14.7417 15.5876 14.6119C15.5876 14.4821 15.6982 14.3774 15.8354 14.3774H16.331V14.1063H15.8354C15.6982 14.1063 15.5876 14.0016 15.5876 13.8718C15.5876 13.742 15.6982 13.6373 15.8354 13.6373H16.331V13.3668H15.8354C15.6982 13.3668 15.5876 13.2621 15.5876 13.1323C15.5876 13.0025 15.6982 12.8978 15.8354 12.8978H16.331V12.6267H15.8354C15.6982 12.6267 15.5876 12.522 15.5876 12.3922C15.5876 12.2624 15.6982 12.1577 15.8354 12.1577H16.331V11.8865H15.8354C15.6982 11.8865 15.5876 11.7819 15.5876 11.6521C15.5876 11.5223 15.6982 11.4176 15.8354 11.4176H16.331V11.1464H15.8354C15.6982 11.1464 15.5876 11.0418 15.5876 10.9119C15.5876 10.7821 15.6982 10.6775 15.8354 10.6775H16.3367C16.3719 10.4321 16.5479 10.2248 16.7877 10.1392V9.50237C16.5514 9.43101 16.3618 9.26043 16.2749 9.04295C15.1215 9.68926 13.7611 9.99715 12.4489 9.98763C12.3792 10.1324 12.2535 10.2493 12.097 10.3084V10.7006H12.627C12.7642 10.7006 12.8748 10.8052 12.8748 10.935C12.8748 11.0649 12.7642 11.1695 12.627 11.1695H12.097L12.0962 11.4618H12.6263C12.7635 11.4618 12.8741 11.5664 12.8741 11.6962C12.8741 11.826 12.7635 11.9307 12.6263 11.9307H12.0962V12.2236H12.6263C12.7635 12.2236 12.8741 12.3282 12.8741 12.4581C12.8741 12.5879 12.7635 12.6925 12.6263 12.6925H12.0962V12.9855H12.6263C12.7635 12.9855 12.8741 13.0902 12.8741 13.22C12.8741 13.3498 12.7635 13.4545 12.6263 13.4545H12.0962L12.0964 15.017ZM16.8259 15.017H17.2461V14.8464H16.8259V15.017ZM17.7395 15.017H21.9024V14.215H21.3745C21.2373 14.215 21.1267 14.1103 21.1267 13.9805C21.1267 13.8507 21.2373 13.746 21.3745 13.746H21.9045V13.4531H21.3745C21.2373 13.4531 21.1267 13.3485 21.1267 13.2186C21.1267 13.0888 21.2373 12.9842 21.3745 12.9842H21.9045V12.6913H21.3745C21.2373 12.6913 21.1267 12.5866 21.1267 12.4568C21.1267 12.327 21.2373 12.2223 21.3745 12.2223H21.9045V11.9294H21.3745C21.2373 11.9294 21.1267 11.8247 21.1267 11.6949C21.1267 11.5651 21.2373 11.4604 21.3745 11.4604H21.9045V11.1675H21.3745C21.2373 11.1675 21.1267 11.0628 21.1267 10.933C21.1267 10.8032 21.2373 10.6985 21.3745 10.6985H21.9045V10.3084C21.748 10.2479 21.6223 10.1324 21.5526 9.97532C20.2598 9.99716 18.9261 9.70017 17.7826 9.07422C17.69 9.27744 17.5076 9.4351 17.2835 9.50306V10.1419C17.5234 10.2282 17.7015 10.4348 17.7345 10.6802H18.2358C18.373 10.6802 18.4836 10.7848 18.4836 10.9147C18.4836 11.0445 18.373 11.1491 18.2358 11.1491H17.7403V11.4203H18.2358C18.373 11.4203 18.4836 11.525 18.4836 11.6548C18.4836 11.7846 18.373 11.8893 18.2358 11.8893H17.7403V12.1604H18.2358C18.373 12.1604 18.4836 12.2651 18.4836 12.3949C18.4836 12.5247 18.373 12.6294 18.2358 12.6294H17.7403V12.9006H18.2358C18.373 12.9006 18.4836 13.0052 18.4836 13.135C18.4836 13.2649 18.373 13.3695 18.2358 13.3695H17.7403V13.6407H18.2358C18.373 13.6407 18.4836 13.7454 18.4836 13.8752C18.4836 14.005 18.373 14.1097 18.2358 14.1097H17.7403V14.3808H18.2358C18.373 14.3808 18.4836 14.4855 18.4836 14.6153C18.4836 14.7451 18.373 14.8498 18.2358 14.8498H17.7403L17.7395 15.017ZM22.7174 15.4859H11.2833V16.1234H22.718L22.7174 15.4859ZM11.9629 9.62542C11.812 9.4827 11.5836 9.69882 11.7345 9.84155C11.8853 9.98427 12.1137 9.76815 11.9629 9.62542ZM17.2598 8.55774C17.0601 8.36881 16.7161 8.50269 16.7161 8.77047C16.7161 9.03757 17.0587 9.17145 17.2598 8.9832C17.3855 8.86494 17.3855 8.67464 17.2598 8.55774ZM17.2462 14.3773V14.1062L16.826 14.1068V14.378L17.2462 14.3773ZM17.2462 13.6379V13.3667H16.826V13.6379H17.2462ZM17.2462 12.8978V12.6266H16.826V12.8978H17.2462ZM17.2462 12.1577V11.8865L16.826 11.8872V12.1584L17.2462 12.1577ZM17.2462 11.4182V11.1471H16.826V11.4182H17.2462Z" fill="white"/>
<defs>
<linearGradient id="paint0_linear_774_10596" x1="17.667" y1="1" x2="17.667" y2="44.5225" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0.35"/>
</linearGradient>
</defs>
</svg>
        `;
        return new Icon({
          iconUrl: `data:image/svg+xml,${encodeURIComponent(
            transformerSvgString
          )}`,
          iconSize: [40, 50],
          iconAnchor: [20, 50],
          popupAnchor: [0, -50],
        });
      }
      case "Households": {
        const householdBgColor = getStatusColor(status);
        const householdSvgString = `
       <svg width="36" height="46" viewBox="0 0 36 46" fill="none" xmlns="http://www.w3.org/2000/svg">
<mask id="path-1-outside-1_774_10626" maskUnits="userSpaceOnUse" x="0" y="0" width="36" height="46" fill="black">
<rect fill="white" width="36" height="46"/>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z"/>
</mask>
<path d="M17.667 1C26.872 1 34.334 8.49506 34.334 17.7412C34.334 23.2545 31.6807 28.1449 27.5869 31.1953C24.446 33.5677 19.9724 37.3237 18.9512 43.3936C18.8508 43.9896 18.3764 44.4602 17.7861 44.5166L17.667 44.5225C17.0223 44.5225 16.4899 44.0293 16.3828 43.3936C15.3615 37.3233 10.8871 33.5677 7.74609 31.1953C3.65267 28.1448 1.00001 23.2542 1 17.7412C1 8.49508 8.46196 1.00003 17.667 1Z" fill="#2463EB"/>
<path d="M17.667 1V0H17.667L17.667 1ZM34.334 17.7412L35.334 17.7412V17.7412H34.334ZM27.5869 31.1953L26.9894 30.3934L26.9842 30.3974L27.5869 31.1953ZM18.9512 43.3936L19.9373 43.5596L19.9373 43.5595L18.9512 43.3936ZM17.7861 44.5166L17.8353 45.5154L17.8583 45.5143L17.8812 45.5121L17.7861 44.5166ZM17.667 44.5225V45.5225H17.6916L17.7161 45.5213L17.667 44.5225ZM16.3828 43.3936L15.3967 43.5595L15.3967 43.5596L16.3828 43.3936ZM7.74609 31.1953L8.34881 30.3973L8.34364 30.3935L7.74609 31.1953ZM1 17.7412H0V17.7412L1 17.7412ZM17.667 1V2C26.3156 2 33.334 9.04316 33.334 17.7412H34.334H35.334C35.334 7.94697 27.4285 0 17.667 0V1ZM34.334 17.7412L33.334 17.7412C33.334 22.9263 30.84 27.5242 26.9894 30.3934L27.5869 31.1953L28.1844 31.9972C32.5215 28.7655 35.334 23.5827 35.334 17.7412L34.334 17.7412ZM27.5869 31.1953L26.9842 30.3974C23.8312 32.7789 19.0564 36.7409 17.965 43.2276L18.9512 43.3936L19.9373 43.5595C20.8884 37.9065 25.0607 34.3566 28.1896 31.9933L27.5869 31.1953ZM18.9512 43.3936L17.9651 43.2275C17.9337 43.4137 17.7952 43.5112 17.691 43.5211L17.7861 44.5166L17.8812 45.5121C18.9576 45.4092 19.7679 44.5656 19.9373 43.5596L18.9512 43.3936ZM17.7861 44.5166L17.737 43.5178L17.6179 43.5237L17.667 44.5225L17.7161 45.5213L17.8353 45.5154L17.7861 44.5166ZM17.667 44.5225V43.5225C17.5567 43.5225 17.4028 43.4288 17.3689 43.2275L16.3828 43.3936L15.3967 43.5596C15.5769 44.6297 16.4879 45.5225 17.667 45.5225V44.5225ZM16.3828 43.3936L17.369 43.2276C16.2775 36.7404 11.5017 32.7787 8.3488 30.3973L7.74609 31.1953L7.14339 31.9933C10.2725 34.3567 14.4455 37.9061 15.3967 43.5595L16.3828 43.3936ZM7.74609 31.1953L8.34364 30.3935C4.49347 27.5243 2.00001 22.9261 2 17.7412L1 17.7412L0 17.7412C9.59635e-06 23.5823 2.81188 28.7654 7.14855 31.9972L7.74609 31.1953ZM1 17.7412H2C2 9.04318 9.01843 2.00003 17.667 2L17.667 1L17.667 0C7.9055 3.38554e-05 0 7.94698 0 17.7412H1Z" fill="url(#paint0_linear_774_10626)" mask="url(#path-1-outside-1_774_10626)"/>
<path d="M25.7499 16.375C25.6197 16.3742 25.4929 16.3327 25.3874 16.2563L16.9999 10.2688L8.61244 16.2563C8.47788 16.336 8.31833 16.3623 8.16529 16.3301C8.01225 16.298 7.87684 16.2096 7.78579 16.0824C7.69474 15.9552 7.65467 15.7986 7.67349 15.6433C7.69231 15.4881 7.76865 15.3455 7.88744 15.2438L16.6374 8.99379C16.7433 8.91843 16.87 8.87793 16.9999 8.87793C17.1299 8.87793 17.2566 8.91843 17.3624 8.99379L26.1124 15.2438C26.2191 15.321 26.2987 15.43 26.3398 15.5552C26.3809 15.6804 26.3813 15.8153 26.3411 15.9408C26.3009 16.0662 26.2221 16.1758 26.1159 16.2538C26.0098 16.3318 25.8817 16.3742 25.7499 16.375Z" fill="url(#paint1_linear_774_10626)"/>
<path d="M10.125 12.625C9.95924 12.625 9.80027 12.5592 9.68306 12.4419C9.56585 12.3247 9.5 12.1658 9.5 12V9.5C9.5 9.33424 9.56585 9.17527 9.68306 9.05806C9.80027 8.94085 9.95924 8.875 10.125 8.875H12.625C12.7908 8.875 12.9497 8.94085 13.0669 9.05806C13.1842 9.17527 13.25 9.33424 13.25 9.5C13.25 9.66576 13.1842 9.82473 13.0669 9.94194C12.9497 10.0592 12.7908 10.125 12.625 10.125H10.75V12C10.75 12.1658 10.6842 12.3247 10.5669 12.4419C10.4497 12.5592 10.2908 12.625 10.125 12.625Z" fill="url(#paint2_linear_774_10626)"/>
<path d="M22.625 25.125H19.5C19.3342 25.125 19.1753 25.0592 19.0581 24.9419C18.9408 24.8247 18.875 24.6658 18.875 24.5V20.125H15.125V24.5C15.125 24.6658 15.0592 24.8247 14.9419 24.9419C14.8247 25.0592 14.6658 25.125 14.5 25.125H11.375C10.8777 25.125 10.4008 24.9275 10.0492 24.5758C9.69754 24.2242 9.5 23.7473 9.5 23.25V17C9.5 16.8342 9.56585 16.6753 9.68306 16.5581C9.80027 16.4408 9.95924 16.375 10.125 16.375C10.2908 16.375 10.4497 16.4408 10.5669 16.5581C10.6842 16.6753 10.75 16.8342 10.75 17V23.25C10.75 23.4158 10.8158 23.5747 10.9331 23.6919C11.0503 23.8092 11.2092 23.875 11.375 23.875H13.875V19.5C13.875 19.3342 13.9408 19.1753 14.0581 19.0581C14.1753 18.9408 14.3342 18.875 14.5 18.875H19.5C19.6658 18.875 19.8247 18.9408 19.9419 19.0581C20.0592 19.1753 20.125 19.3342 20.125 19.5V23.875H22.625C22.7908 23.875 22.9497 23.8092 23.0669 23.6919C23.1842 23.5747 23.25 23.4158 23.25 23.25V17C23.25 16.8342 23.3158 16.6753 23.4331 16.5581C23.5503 16.4408 23.7092 16.375 23.875 16.375C24.0408 16.375 24.1997 16.4408 24.3169 16.5581C24.4342 16.6753 24.5 16.8342 24.5 17V23.25C24.5 23.7473 24.3025 24.2242 23.9508 24.5758C23.5992 24.9275 23.1223 25.125 22.625 25.125Z" fill="url(#paint3_linear_774_10626)"/>
<defs>
<linearGradient id="paint0_linear_774_10626" x1="17.667" y1="1" x2="17.667" y2="44.5225" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0.35"/>
</linearGradient>
<linearGradient id="paint1_linear_774_10626" x1="17.0199" y1="8.87793" x2="17.0199" y2="16.375" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0.35"/>
</linearGradient>
<linearGradient id="paint2_linear_774_10626" x1="11.375" y1="8.875" x2="11.375" y2="12.625" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0.35"/>
</linearGradient>
<linearGradient id="paint3_linear_774_10626" x1="17" y1="16.375" x2="17" y2="25.125" gradientUnits="userSpaceOnUse">
<stop stop-color="white"/>
<stop offset="1" stop-color="white" stop-opacity="0.35"/>
</linearGradient>
</defs>
</svg>

        `;
        return new Icon({
          iconUrl: `data:image/svg+xml,${encodeURIComponent(
            householdSvgString
          )}`,
          iconSize: [40, 50],
          iconAnchor: [20, 50],
          popupAnchor: [0, -50],
        });
      }
      case "All":
        color = "#64748b";
        iconSymbol = "‚óè";
        break;
      default:
        color = "#64748b";
        iconSymbol = "‚ùì";
    }
    // Make ping marker slightly different: add a thicker white border
    const svgString = `<svg width="40" height="50" viewBox="0 0 40 50" xmlns="http://www.w3.org/2000/svg"><defs><filter id="shadow" x="-50%" y="-50%" width="200%" height="200%"><feDropShadow dx="0" dy="2" stdDeviation="3" flood-color="rgba(0,0,0,0.2)"/></filter></defs><g filter="url(#shadow)"><path d="M20 5 C12 5 5 12 5 20 C5 24 10 30 20 40 C30 30 35 24 35 20 C35 12 28 5 20 5" fill="${color}" stroke="white" strokeWidth="3"/><text x="20" y="24" textAnchor="middle" fill="white" fontFamily="Arial, sans-serif" fontSize="16" fontWeight="bold">${iconSymbol}</text></g></svg>`;
    return new Icon({
      iconUrl: `data:image/svg+xml,${encodeURIComponent(svgString)}`,
      iconSize: [40, 50],
      iconAnchor: [20, 50],
      popupAnchor: [0, -50],
    });
  };

  // Calculate map center: prefer pingMarkers, then assets, then default
  let centerLat = 37.7749; // Default San Francisco
  let centerLng = -122.4194;
  if (pingMarkers && pingMarkers.length > 0) {
    centerLat =
      pingMarkers.reduce((sum, m) => sum + m.lat, 0) / pingMarkers.length;
    centerLng =
      pingMarkers.reduce((sum, m) => sum + m.lng, 0) / pingMarkers.length;
  } else if (assets.length > 0) {
    centerLat =
      assets.reduce((sum, asset) => sum + asset.coordinates[0], 0) /
      assets.length;
    centerLng =
      assets.reduce((sum, asset) => sum + asset.coordinates[1], 0) /
      assets.length;
  }

  return (
    <div className="h-full w-full z-50">
      <MapContainer
        center={[centerLat, centerLng]}
        zoom={zoom}
        className="h-full w-full"
      >
        <TileLayer
          attribution='&copy; <a href="https://carto.com/">CartoDB</a>'
          url="https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png"
        />

        {assets.map((asset) => (
          <Marker
            key={asset.id}
            position={asset.coordinates}
            icon={createAssetIcon(asset.type, asset.status)}
          >
            <Popup>
              <div className="p-2 min-w-[200px]">
                <h3 className="font-semibold text-gray-800 mb-1 text-base">
                  {asset.name}
                </h3>
                <div className="space-y-0.5 text-xs">
                  <div className="flex justify-between">
                    <span className="text-gray-600">Type:</span>
                    <span className="font-medium capitalize">{asset.type}</span>
                  </div>
                  {/* Add other relevant details based on asset type if needed */}
                  {/* For example, load for substations/transformers, DER info for households */}
                  <div className="flex justify-between items-center">
                    <span className="text-gray-600">Status:</span>
                    <StatusBadge status={asset.status || "Normal"} size="sm" />
                  </div>
                </div>

                {asset.type === "household" && asset.hasDers && (
                  <div className="flex justify-between items-center">
                    <span className="text-gray-600">DERs:</span>
                    <span className="font-medium text-green-600">Active</span>
                  </div>
                )}
              </div>
            </Popup>
          </Marker>
        ))}

        {/* Render ping markers for the selected tab */}
        {pingMarkers &&
          (() => {
            // Find the last index of a marker with Critical status
            const lastCriticalIdx = pingMarkers.reduce(
              (lastIdx, marker, idx) =>
                marker.status === "Critical" ? idx : lastIdx,
              -1
            );
            return pingMarkers.map((marker, idx) => (
              <Marker
                key={`ping-${idx}`}
                position={[marker.lat, marker.lng]}
                icon={createPingIcon(
                  marker.type,
                  marker.status || "Normal",
                  idx === lastCriticalIdx // Only last critical gets warning light
                )}
              >
                <Popup>
                  <div>
                    <div className="font-semibold mb-1">
                      {marker.name || "Feeder"}
                    </div>
                    <div className="mb-1">
                      Load: {marker.load ? `${marker.load}%` : "N/A"}
                    </div>
                    <div className="mb-1">Status: {marker.status || "N/A"}</div>
                  </div>
                </Popup>
              </Marker>
            ));
          })()}
      </MapContainer>
    </div>
  );
}
